// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/lib/ns"
)

type Handle struct {
	CloseStub        func() error
	closeMutex       sync.RWMutex
	closeArgsForCall []struct{}
	closeReturns     struct {
		result1 error
	}
	IsOpenStub        func() bool
	isOpenMutex       sync.RWMutex
	isOpenArgsForCall []struct{}
	isOpenReturns     struct {
		result1 bool
	}
	FdStub        func() uintptr
	fdMutex       sync.RWMutex
	fdArgsForCall []struct{}
	fdReturns     struct {
		result1 uintptr
	}
}

func (fake *Handle) Close() error {
	fake.closeMutex.Lock()
	fake.closeArgsForCall = append(fake.closeArgsForCall, struct{}{})
	fake.closeMutex.Unlock()
	if fake.CloseStub != nil {
		return fake.CloseStub()
	} else {
		return fake.closeReturns.result1
	}
}

func (fake *Handle) CloseCallCount() int {
	fake.closeMutex.RLock()
	defer fake.closeMutex.RUnlock()
	return len(fake.closeArgsForCall)
}

func (fake *Handle) CloseReturns(result1 error) {
	fake.CloseStub = nil
	fake.closeReturns = struct {
		result1 error
	}{result1}
}

func (fake *Handle) IsOpen() bool {
	fake.isOpenMutex.Lock()
	fake.isOpenArgsForCall = append(fake.isOpenArgsForCall, struct{}{})
	fake.isOpenMutex.Unlock()
	if fake.IsOpenStub != nil {
		return fake.IsOpenStub()
	} else {
		return fake.isOpenReturns.result1
	}
}

func (fake *Handle) IsOpenCallCount() int {
	fake.isOpenMutex.RLock()
	defer fake.isOpenMutex.RUnlock()
	return len(fake.isOpenArgsForCall)
}

func (fake *Handle) IsOpenReturns(result1 bool) {
	fake.IsOpenStub = nil
	fake.isOpenReturns = struct {
		result1 bool
	}{result1}
}

func (fake *Handle) Fd() uintptr {
	fake.fdMutex.Lock()
	fake.fdArgsForCall = append(fake.fdArgsForCall, struct{}{})
	fake.fdMutex.Unlock()
	if fake.FdStub != nil {
		return fake.FdStub()
	} else {
		return fake.fdReturns.result1
	}
}

func (fake *Handle) FdCallCount() int {
	fake.fdMutex.RLock()
	defer fake.fdMutex.RUnlock()
	return len(fake.fdArgsForCall)
}

func (fake *Handle) FdReturns(result1 uintptr) {
	fake.FdStub = nil
	fake.fdReturns = struct {
		result1 uintptr
	}{result1}
}

var _ ns.Handle = new(Handle)
