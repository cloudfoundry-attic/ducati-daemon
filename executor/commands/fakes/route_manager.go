// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/executor/commands"
)

type RouteManager struct {
	AddRouteStub        func(interfaceName string, destination *net.IPNet, gateway net.IP) error
	addRouteMutex       sync.RWMutex
	addRouteArgsForCall []struct {
		interfaceName string
		destination   *net.IPNet
		gateway       net.IP
	}
	addRouteReturns struct {
		result1 error
	}
}

func (fake *RouteManager) AddRoute(interfaceName string, destination *net.IPNet, gateway net.IP) error {
	fake.addRouteMutex.Lock()
	fake.addRouteArgsForCall = append(fake.addRouteArgsForCall, struct {
		interfaceName string
		destination   *net.IPNet
		gateway       net.IP
	}{interfaceName, destination, gateway})
	fake.addRouteMutex.Unlock()
	if fake.AddRouteStub != nil {
		return fake.AddRouteStub(interfaceName, destination, gateway)
	} else {
		return fake.addRouteReturns.result1
	}
}

func (fake *RouteManager) AddRouteCallCount() int {
	fake.addRouteMutex.RLock()
	defer fake.addRouteMutex.RUnlock()
	return len(fake.addRouteArgsForCall)
}

func (fake *RouteManager) AddRouteArgsForCall(i int) (string, *net.IPNet, net.IP) {
	fake.addRouteMutex.RLock()
	defer fake.addRouteMutex.RUnlock()
	return fake.addRouteArgsForCall[i].interfaceName, fake.addRouteArgsForCall[i].destination, fake.addRouteArgsForCall[i].gateway
}

func (fake *RouteManager) AddRouteReturns(result1 error) {
	fake.AddRouteStub = nil
	fake.addRouteReturns = struct {
		result1 error
	}{result1}
}

var _ commands.RouteManager = new(RouteManager)
