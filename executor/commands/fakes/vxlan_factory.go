// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/executor/commands"
)

type VxlanFactory struct {
	CreateVxlanStub        func(name string, vni int) error
	createVxlanMutex       sync.RWMutex
	createVxlanArgsForCall []struct {
		name string
		vni  int
	}
	createVxlanReturns struct {
		result1 error
	}
}

func (fake *VxlanFactory) CreateVxlan(name string, vni int) error {
	fake.createVxlanMutex.Lock()
	fake.createVxlanArgsForCall = append(fake.createVxlanArgsForCall, struct {
		name string
		vni  int
	}{name, vni})
	fake.createVxlanMutex.Unlock()
	if fake.CreateVxlanStub != nil {
		return fake.CreateVxlanStub(name, vni)
	} else {
		return fake.createVxlanReturns.result1
	}
}

func (fake *VxlanFactory) CreateVxlanCallCount() int {
	fake.createVxlanMutex.RLock()
	defer fake.createVxlanMutex.RUnlock()
	return len(fake.createVxlanArgsForCall)
}

func (fake *VxlanFactory) CreateVxlanArgsForCall(i int) (string, int) {
	fake.createVxlanMutex.RLock()
	defer fake.createVxlanMutex.RUnlock()
	return fake.createVxlanArgsForCall[i].name, fake.createVxlanArgsForCall[i].vni
}

func (fake *VxlanFactory) CreateVxlanReturns(result1 error) {
	fake.CreateVxlanStub = nil
	fake.createVxlanReturns = struct {
		result1 error
	}{result1}
}

var _ commands.VxlanFactory = new(VxlanFactory)
