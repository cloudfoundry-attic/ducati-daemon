// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/marshal"
)

type Unmarshaler struct {
	UnmarshalStub        func(input []byte, output interface{}) error
	unmarshalMutex       sync.RWMutex
	unmarshalArgsForCall []struct {
		input  []byte
		output interface{}
	}
	unmarshalReturns struct {
		result1 error
	}
}

func (fake *Unmarshaler) Unmarshal(input []byte, output interface{}) error {
	fake.unmarshalMutex.Lock()
	fake.unmarshalArgsForCall = append(fake.unmarshalArgsForCall, struct {
		input  []byte
		output interface{}
	}{input, output})
	fake.unmarshalMutex.Unlock()
	if fake.UnmarshalStub != nil {
		return fake.UnmarshalStub(input, output)
	} else {
		return fake.unmarshalReturns.result1
	}
}

func (fake *Unmarshaler) UnmarshalCallCount() int {
	fake.unmarshalMutex.RLock()
	defer fake.unmarshalMutex.RUnlock()
	return len(fake.unmarshalArgsForCall)
}

func (fake *Unmarshaler) UnmarshalArgsForCall(i int) ([]byte, interface{}) {
	fake.unmarshalMutex.RLock()
	defer fake.unmarshalMutex.RUnlock()
	return fake.unmarshalArgsForCall[i].input, fake.unmarshalArgsForCall[i].output
}

func (fake *Unmarshaler) UnmarshalReturns(result1 error) {
	fake.UnmarshalStub = nil
	fake.unmarshalReturns = struct {
		result1 error
	}{result1}
}

var _ marshal.Unmarshaler = new(Unmarshaler)
