// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/executor"
)

type ListenerFactory struct {
	ListenUDPStub        func(net string, address string) (*net.UDPConn, error)
	listenUDPMutex       sync.RWMutex
	listenUDPArgsForCall []struct {
		net     string
		address string
	}
	listenUDPReturns struct {
		result1 *net.UDPConn
		result2 error
	}
}

func (fake *ListenerFactory) ListenUDP(net string, address string) (*net.UDPConn, error) {
	fake.listenUDPMutex.Lock()
	fake.listenUDPArgsForCall = append(fake.listenUDPArgsForCall, struct {
		net     string
		address string
	}{net, address})
	fake.listenUDPMutex.Unlock()
	if fake.ListenUDPStub != nil {
		return fake.ListenUDPStub(net, address)
	} else {
		return fake.listenUDPReturns.result1, fake.listenUDPReturns.result2
	}
}

func (fake *ListenerFactory) ListenUDPCallCount() int {
	fake.listenUDPMutex.RLock()
	defer fake.listenUDPMutex.RUnlock()
	return len(fake.listenUDPArgsForCall)
}

func (fake *ListenerFactory) ListenUDPArgsForCall(i int) (string, string) {
	fake.listenUDPMutex.RLock()
	defer fake.listenUDPMutex.RUnlock()
	return fake.listenUDPArgsForCall[i].net, fake.listenUDPArgsForCall[i].address
}

func (fake *ListenerFactory) ListenUDPReturns(result1 *net.UDPConn, result2 error) {
	fake.ListenUDPStub = nil
	fake.listenUDPReturns = struct {
		result1 *net.UDPConn
		result2 error
	}{result1, result2}
}

var _ executor.ListenerFactory = new(ListenerFactory)
