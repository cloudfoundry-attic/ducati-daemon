// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/executor"
	"github.com/cloudfoundry-incubator/ducati-daemon/sandbox"
)

type SandboxRepository struct {
	CreateStub        func(sandboxName string) (sandbox.Sandbox, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		sandboxName string
	}
	createReturns struct {
		result1 sandbox.Sandbox
		result2 error
	}
	GetStub        func(sandboxName string) (sandbox.Sandbox, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		sandboxName string
	}
	getReturns struct {
		result1 sandbox.Sandbox
		result2 error
	}
	DestroyStub        func(sandboxName string) error
	destroyMutex       sync.RWMutex
	destroyArgsForCall []struct {
		sandboxName string
	}
	destroyReturns struct {
		result1 error
	}
}

func (fake *SandboxRepository) Create(sandboxName string) (sandbox.Sandbox, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		sandboxName string
	}{sandboxName})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(sandboxName)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2
	}
}

func (fake *SandboxRepository) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *SandboxRepository) CreateArgsForCall(i int) string {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].sandboxName
}

func (fake *SandboxRepository) CreateReturns(result1 sandbox.Sandbox, result2 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 sandbox.Sandbox
		result2 error
	}{result1, result2}
}

func (fake *SandboxRepository) Get(sandboxName string) (sandbox.Sandbox, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		sandboxName string
	}{sandboxName})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(sandboxName)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *SandboxRepository) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *SandboxRepository) GetArgsForCall(i int) string {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].sandboxName
}

func (fake *SandboxRepository) GetReturns(result1 sandbox.Sandbox, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 sandbox.Sandbox
		result2 error
	}{result1, result2}
}

func (fake *SandboxRepository) Destroy(sandboxName string) error {
	fake.destroyMutex.Lock()
	fake.destroyArgsForCall = append(fake.destroyArgsForCall, struct {
		sandboxName string
	}{sandboxName})
	fake.destroyMutex.Unlock()
	if fake.DestroyStub != nil {
		return fake.DestroyStub(sandboxName)
	} else {
		return fake.destroyReturns.result1
	}
}

func (fake *SandboxRepository) DestroyCallCount() int {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return len(fake.destroyArgsForCall)
}

func (fake *SandboxRepository) DestroyArgsForCall(i int) string {
	fake.destroyMutex.RLock()
	defer fake.destroyMutex.RUnlock()
	return fake.destroyArgsForCall[i].sandboxName
}

func (fake *SandboxRepository) DestroyReturns(result1 error) {
	fake.DestroyStub = nil
	fake.destroyReturns = struct {
		result1 error
	}{result1}
}

var _ executor.SandboxRepository = new(SandboxRepository)
