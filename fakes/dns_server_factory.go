// This file was generated by counterfeiter
package fakes

import (
	"net"
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/executor"
	"github.com/tedsuo/ifrit"
)

type DNSServerFactory struct {
	NewStub        func(listener net.PacketConn) (ifrit.Runner, error)
	newMutex       sync.RWMutex
	newArgsForCall []struct {
		listener net.PacketConn
	}
	newReturns struct {
		result1 ifrit.Runner
		result2 error
	}
}

func (fake *DNSServerFactory) New(listener net.PacketConn) (ifrit.Runner, error) {
	fake.newMutex.Lock()
	fake.newArgsForCall = append(fake.newArgsForCall, struct {
		listener net.PacketConn
	}{listener})
	fake.newMutex.Unlock()
	if fake.NewStub != nil {
		return fake.NewStub(listener)
	} else {
		return fake.newReturns.result1, fake.newReturns.result2
	}
}

func (fake *DNSServerFactory) NewCallCount() int {
	fake.newMutex.RLock()
	defer fake.newMutex.RUnlock()
	return len(fake.newArgsForCall)
}

func (fake *DNSServerFactory) NewArgsForCall(i int) net.PacketConn {
	fake.newMutex.RLock()
	defer fake.newMutex.RUnlock()
	return fake.newArgsForCall[i].listener
}

func (fake *DNSServerFactory) NewReturns(result1 ifrit.Runner, result2 error) {
	fake.NewStub = nil
	fake.newReturns = struct {
		result1 ifrit.Runner
		result2 error
	}{result1, result2}
}

var _ executor.DNSServerFactory = new(DNSServerFactory)
