// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/ducati-daemon/marshal"
)

type Marshaler struct {
	MarshalStub        func(input interface{}) ([]byte, error)
	marshalMutex       sync.RWMutex
	marshalArgsForCall []struct {
		input interface{}
	}
	marshalReturns struct {
		result1 []byte
		result2 error
	}
}

func (fake *Marshaler) Marshal(input interface{}) ([]byte, error) {
	fake.marshalMutex.Lock()
	fake.marshalArgsForCall = append(fake.marshalArgsForCall, struct {
		input interface{}
	}{input})
	fake.marshalMutex.Unlock()
	if fake.MarshalStub != nil {
		return fake.MarshalStub(input)
	} else {
		return fake.marshalReturns.result1, fake.marshalReturns.result2
	}
}

func (fake *Marshaler) MarshalCallCount() int {
	fake.marshalMutex.RLock()
	defer fake.marshalMutex.RUnlock()
	return len(fake.marshalArgsForCall)
}

func (fake *Marshaler) MarshalArgsForCall(i int) interface{} {
	fake.marshalMutex.RLock()
	defer fake.marshalMutex.RUnlock()
	return fake.marshalArgsForCall[i].input
}

func (fake *Marshaler) MarshalReturns(result1 []byte, result2 error) {
	fake.MarshalStub = nil
	fake.marshalReturns = struct {
		result1 []byte
		result2 error
	}{result1, result2}
}

var _ marshal.Marshaler = new(Marshaler)
