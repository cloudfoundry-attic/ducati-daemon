// This file was generated by counterfeiter
package fakes

import "sync"

type Deletor struct {
	DeleteStub        func(networkID, containerID, interfaceName string) error
	deleteMutex       sync.RWMutex
	deleteArgsForCall []struct {
		networkID     string
		containerID   string
		interfaceName string
	}
	deleteReturns struct {
		result1 error
	}
}

func (fake *Deletor) Delete(networkID string, containerID string, interfaceName string) error {
	fake.deleteMutex.Lock()
	fake.deleteArgsForCall = append(fake.deleteArgsForCall, struct {
		networkID     string
		containerID   string
		interfaceName string
	}{networkID, containerID, interfaceName})
	fake.deleteMutex.Unlock()
	if fake.DeleteStub != nil {
		return fake.DeleteStub(networkID, containerID, interfaceName)
	} else {
		return fake.deleteReturns.result1
	}
}

func (fake *Deletor) DeleteCallCount() int {
	fake.deleteMutex.RLock()
	defer fake.deleteMutex.RUnlock()
	return len(fake.deleteArgsForCall)
}

func (fake *Deletor) DeleteArgsForCall(i int) (string, string, string) {
	fake.deleteMutex.RLock()
	defer fake.deleteMutex.RUnlock()
	return fake.deleteArgsForCall[i].networkID, fake.deleteArgsForCall[i].containerID, fake.deleteArgsForCall[i].interfaceName
}

func (fake *Deletor) DeleteReturns(result1 error) {
	fake.DeleteStub = nil
	fake.deleteReturns = struct {
		result1 error
	}{result1}
}
